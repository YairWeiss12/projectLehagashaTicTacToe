import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // print Headline - to start a Tic Tac Toe + new line = New Game.
        System.out.println (String.format( "  TIC TAC TOE  %n  *New Game* "));
        Scanner scanner = new Scanner(System.in);
        // create the char board:
        // creating nicer Game-Board, is at last function (after switch case).
        char[][] board = {{' ', ' ', ' '},
                          {' ', ' ', ' '},
                          {' ', ' ', ' '}};
        // print the board:
        PrintGameBoard(board);
        // while loop for changing turns & /or Game Over:
        while (true) {
            PlayerTurn(board, scanner);
            if (isGameOver(board)) {
                break;
            }
            ComputerTurn(board);
            if (isGameOver(board)) {
                break;
            }
        }
        scanner.close(); // to make sure that the loop ends!
    }
    private static boolean WhoWon(char[][] board, char symbol) {
        if ((board[0][0] == symbol && board[0][1] == symbol && board[0][2] == symbol) ||
                (board[1][0] == symbol && board[1][1] == symbol && board[1][2] == symbol) ||
                (board[2][0] == symbol && board[2][1] == symbol && board[2][2] == symbol) ||

                (board[0][0] == symbol && board[1][0] == symbol && board[2][0] == symbol) ||
                (board[0][1] == symbol && board[1][1] == symbol && board[2][1] == symbol) ||
                (board[0][2] == symbol && board[1][2] == symbol && board[2][2] == symbol) ||

                (board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol) ||
                (board[2][0] == symbol && board[1][1] == symbol && board[0][2] == symbol)) {
            return true;
        }
        return false;
    }
    // Is GAME OVER? = end of loop:
    private static boolean isGameOver(char[][] board) {
        if (WhoWon(board, 'X')) {
            PrintGameBoard(board);
            System.out.println("* * * PLAYER WINS !!! * * * ");
            return true;  }
        if (WhoWon(board, 'O')) {
            PrintGameBoard(board);
            System.out.println("THE COMPUTER WON :( ");
            return true;  }
        // Checking if remain an empty space on board?
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == ' ') {
                    return false;
                }
            }
        }
        PrintGameBoard(board);
        // printing if GAME ENDED with a tie?
        System.out.println("* GAME ENDED * IT'S A TIE! *");
        return true;
    }
    private static void ComputerTurn(char[][] board){
            Random rand = new Random();
            int computerMove;
            while (true) {
                computerMove = rand.nextInt(9) + 1;
                if (isValid(board, Integer.toString(computerMove))) {
                    break;
                }
            }
            System.out.println("Computer chose: " + computerMove);
            PlaceMove(board, Integer.toString(computerMove), 'O');
        }
        // to make it easier (than 0,1, or 2) for the player to choose location:
    private static boolean isValid ( char[][] board, String position){
            switch (position) {
                case "1":
                    return board[0][0] == ' ';
                case "2":
                    return board[0][1] == ' ';

                case "3":
                    return board[0][2] == ' ';

                case "4":
                    return board[1][0] == ' ';

                case "5":
                    return board[1][1] == ' ';

                case "6":
                    return board[1][2] == ' ';

                case "7":
                    return board[2][0] == ' ';

                case "8":
                    return board[2][1] == ' ';

                case "9":
                    return board[2][2] == ' ';

                default:
                    return false;
                //System.out.println(" * Choose a valid number! * ");
            }
        }
    private static void PlayerTurn (char[][] board, Scanner scanner){
        String userInput;
        while (true) {
            System.out.println("On which square you want to play? (1-9) ");
            userInput = scanner.nextLine();
            if (isValid(board, userInput)) {
                break;
            }else {
                System.out.println(userInput + " is not a valid move! choose again: ");
            }
        }
            PlaceMove(board, userInput, 'X');
        }
    private static void PlaceMove (char[][] board, String position, char symbol){
            switch (position) {
                case "1":
                    board[0][0] = symbol;
                    break;
                case "2":
                    board[0][1] = symbol;
                    break;
                case "3":
                    board[0][2] = symbol;
                    break;
                case "4":
                    board[1][0] = symbol;
                    break;
                case "5":
                    board[1][1] = symbol;
                    break;
                case "6":
                    board[1][2] = symbol;
                    break;
                case "7":
                    board[2][0] = symbol;
                    break;
                case "8":
                    board[2][1] = symbol;
                    break;
                case "9":
                    board[2][2] = symbol;
                    break;
                default:
                    System.out.println(" * Choose a valid number! * ");
            }
             PrintGameBoard(board);
}
    private static void PrintGameBoard (char[][] board){
            System.out.println("  -----------");
            System.out.println(" | " + board[0][0] + " | " + board[0][1] + " | " + board[0][2] + " | ");
            System.out.println(" |---+---+---|");
            System.out.println(" | " + board[1][0] + " | " + board[1][1] + " | " + board[1][2] + " | ");
            System.out.println(" |---+---+---|");
            System.out.println(" | " + board[2][0] + " | " + board[2][1] + " | " + board[2][2] + " | ");
            System.out.println("  -----------");
            System.out.println();
        }
    }
//  ***how to continue another game?
